# Jump through directory history using the directory stack
# Because apparently `dirs -v` needs a product name and a logo

emulate -L zsh

# Use fzf if available, otherwise fall back to completion
if [[ "$Y_HAS_FZF" == "true" ]]; then
  # Configuration
  local fzf_opts="${Y_FZF_OPTS:---reverse --height=50%}"
  local popup_enabled="${Y_POPUP_ENABLED:-true}"

  # Create temp files safely
  local umask=117
  local in=$(mktemp -t y-jump.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  local out=$(mktemp -t y-jump.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  trap "rm -f -- ${in} ${out} 2>/dev/null" EXIT

  # Get directory stack
  dirs -v > "$in"

  # Use tmux popup if available and enabled
  if [[ -v TMUX && "$popup_enabled" == "true" ]]; then
    tmux popup -b rounded -E "fzf ${fzf_opts} <$in >$out" 
    local selected=$(awk '{print $2}' "$out")
  else
    local selected=$(dirs -v | fzf ${=fzf_opts} | awk '{print $2}')
  fi

  # Execute cd if something was selected
  if [[ -n "$selected" ]]; then
    BUFFER="cd ${selected}"
    zle accept-line
  fi
else
  # Fallback: use pushd/popd directly with numeric argument
  # Show the directory stack to the user
  print -l "Directory stack:" >&2
  dirs -v >&2
  print "" >&2
  print "Usage: Type 'cd ~N' where N is the stack number, or use 'pushd +N'" >&2
  
  # Set up buffer for user to complete the command
  BUFFER="cd ~"
  CURSOR=${#BUFFER}
  
  # Redraw the line
  zle redisplay
fi