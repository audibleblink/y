# Browse named directories (hash -d bookmarks)
# Revolutionary technology from 1991

emulate -L zsh

# Use fzf if available, otherwise fall back to completion
if [[ "$Y_HAS_FZF" == "true" ]]; then
  # Configuration
  local fzf_opts="${Y_FZF_OPTS:---reverse --height=50%}"
  local popup_enabled="${Y_POPUP_ENABLED:-true}"

  # Create temp files safely
  local umask=117
  local in=$(mktemp -t y-bookmarks.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  local out=$(mktemp -t y-bookmarks.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  trap "rm -f -- ${in} ${out} 2>/dev/null" EXIT

  # Get all named directories, formatted nicely
  hash -d | column -s '=' -t > "$in"

  # Show message if no bookmarks exist
  if [[ ! -s "$in" ]]; then
    echo "No bookmarks found. Create some with: hash -d name=/path/to/dir" > "$in"
    echo "Or set Y_BOOKMARKS_FILE to load from a file" >> "$in"
  fi

  # Use tmux popup if available and enabled
  if [[ -v TMUX && "$popup_enabled" == "true" ]]; then
    tmux popup -b rounded -E "fzf ${fzf_opts} <$in >$out"
    local selected=$(awk '{print $2}' "$out")
  else
    local selected=$(fzf ${=fzf_opts} <"$in" | awk '{print $2}')
  fi

  # Execute cd if something was selected
  if [[ -n "$selected" && -d "$selected" ]]; then
    BUFFER="cd ${selected}"
    zle accept-line
  fi
else
  # Fallback: show bookmarks and use native ~name expansion
  local -a bookmarks
  
  # Show available bookmarks to the user
  print -l "Available bookmarks:" >&2
  hash -d | column -s '=' -t >&2
  
  if [[ -z "$(hash -d 2>/dev/null)" ]]; then
    print "" >&2
    print "No bookmarks found. Create some with: hash -d name=/path/to/dir" >&2
    return 1
  fi
  
  print "" >&2
  print "Usage: Type 'cd ~' and press TAB to see completions" >&2
  
  # Set up buffer for named directory expansion
  BUFFER="cd ~"
  CURSOR=${#BUFFER}
  
  # Redraw the line  
  zle redisplay
fi
