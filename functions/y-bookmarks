# Browse named directories (hash -d bookmarks)
# Revolutionary technology from 1991

emulate -L zsh

# Use fzf if available, otherwise fall back to completion
if [[ "$Y_HAS_FZF" == "true" ]]; then
  # Configuration
  local fzf_opts="${Y_FZF_OPTS:---reverse --height=50%}"
  local popup_enabled="${Y_POPUP_ENABLED:-true}"

  # Create temp files safely
  local umask=117
  local in=$(mktemp -t y-bookmarks.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  local out=$(mktemp -t y-bookmarks.XXX -p "${XDG_RUNTIME_DIR:-/tmp}")
  trap "rm -f -- ${in} ${out} 2>/dev/null" EXIT

  # Get all named directories, formatted nicely
  hash -d | column -s '=' -t > "$in"

  # Show message if no bookmarks exist
  if [[ ! -s "$in" ]]; then
    echo "No bookmarks found. Create some with: hash -d name=/path/to/dir" > "$in"
    echo "Or set Y_BOOKMARKS_FILE to load from a file" >> "$in"
  fi

  # Use tmux popup if available and enabled
  if [[ -v TMUX && "$popup_enabled" == "true" ]]; then
    tmux popup -b rounded -E "fzf ${fzf_opts} <$in >$out"
    local selected=$(awk '{print $2}' "$out")
  else
    local selected=$(fzf ${=fzf_opts} <"$in" | awk '{print $2}')
  fi

  # Execute cd if something was selected
  if [[ -n "$selected" && -d "$selected" ]]; then
    BUFFER="cd ${selected}"
    zle accept-line
  fi
else
  # Fallback: use zsh's native named directory expansion
  # Get all hash -d entries
  local -a bookmark_items bookmark_names
  local name path
  
  # Parse hash -d output
  while IFS='=' read -r name path; do
    bookmark_names+=("~$name")
    bookmark_items+=("$path:~$name - $path")
  done < <(hash -d 2>/dev/null )
  
  if (( ${#bookmark_names} == 0 )); then
    print "No bookmarks found. Create some with: hash -d name=/path/to/dir" >&2
    return 1
  fi
  
  # Set up buffer with cd and trigger completion
  BUFFER="cd "
  
  # Define custom completion
  zle -C y-bookmarks-complete menu-complete _y_bookmarks_complete
  
  _y_bookmarks_complete() {
    compadd -d bookmark_items -Q -- "${bookmark_names[@]}"
  }
  
  # Trigger completion
  zle y-bookmarks-complete
fi
